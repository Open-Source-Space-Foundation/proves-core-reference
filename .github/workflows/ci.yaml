name: ci

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Lint
        run: |
          make fmt
  build:
    runs-on: deathstar
    env:
      UV_CACHE_DIR: /tmp/.uv-cache

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Cache bin
      uses: actions/cache@v4
      with:
        path: |
          bin
        key: bin-${{ runner.os }}-${{ hashFiles('lib/makelib/build-tools.mk') }}
        restore-keys: |
          bin-${{ runner.os }}-${{ hashFiles('lib/makelib/build-tools.mk') }}

    - name: Download bin tools
      if: steps.cache-bin.outputs.cache-hit != 'true'
      run: |
        make download-bin

    - name: Setup submodules
      if: steps.cache-submodules.outputs.cache-hit != 'true'
      run: |
        make submodules

    - name: Restore uv cache
      uses: actions/cache@v4
      with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}

    - name: Create python venv
      run: |
        make fprime-venv

    - name: Setup Zephyr
      if: steps.cache-zephyr-workspace.outputs.cache-hit != 'true'
      run: |
        make zephyr-workspace

    - name: Cache Zephyr SDK
      id: cache-zephyr-sdk
      uses: actions/cache@v4
      with:
        path: |
          ~/zephyr-sdk-*
        key: zephyr-sdk-${{ runner.os }}-${{ hashFiles('lib/zephyr-workspace/zephyr/SDK_VERSION') }}
        restore-keys: |
          zephyr-sdk-${{ runner.os }}-${{ hashFiles('lib/zephyr-workspace/zephyr/SDK_VERSION') }}

    - name: Setup Zephyr SDK
      if: steps.cache-zephyr-sdk.outputs.cache-hit != 'true'
      run: |
        make zephyr-sdk

    - name: Setup Zephyr Export
      run: |
        make zephyr-export

    - name: Install Zephyr Python Dependencies
      run: |
        make ngay-test
        make zephyr-python-deps

    - name: Generate
      run: |
        make generate-ci

    - name: Build
      run: |
        make build-ci

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: artifacts
        path: |
          build-artifacts/zephyr.uf2
          build-artifacts/zephyr/fprime-zephyr-deployment/dict/ReferenceDeploymentTopologyDictionary.json
        retention-days: 30

    - name: Minimize uv cache
      run: make minimize-uv-cache
  integration:
    runs-on: [integration]
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v5
      - name: Set up dependencies
        run: |
          mkdir -p build-artifacts/zephyr/fprime-zephyr-deployment/dict && mv zephyr/fprime-zephyr-deployment/dict/ReferenceDeploymentTopologyDictionary.json build-artifacts/zephyr/fprime-zephyr-deployment/dict
            make submodules
            make fprime-venv
      - name: Trigger Bootloader
        run: |
          make bootloader
          sleep 10
      - name: Copy Firmware
        run: |
          picotool load ./zephyr.uf2
          picotool reboot
      - name: Run Integration Tests
        run: |
          make test-integration
